version: '3'
services:
  mongo:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    networks:
      - shared-network
    env_file:
      - .env
    volumes:
      - dbdata:/data/db
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    volumes:
      - redis:/data
    networks:
      - shared-network
  # redis-commander:
  #   hostname: redis-commander
  #   image: ghcr.io/joeferner/redis-commander:latest
  #   depends_on:
  #     - redis
  #   env_file:
  #     - .env.rediscd
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - shared-network
  # elasticsearch:
  #   container_name: es-container
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.2.2
  #   environment:
  #     - xpack.security.enabled=false
  #     - 'discovery.type=single-node'
  #   ports:
  #     - '9200:9200'
  #   networks:
  #     # - shared-network
  #     - es-network
  # grafana:
  #   image: grafana/grafana
  #   restart: unless-stopped
  #   ports:
  #     - '1900:3000'
  #   networks:
  #     - es-network
  #   volumes:
  #     - 'grafana_storage:/var/lib/grafana'
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.2.2
  #   networks:
  #     - es-network
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://es-container:9200
  # nestjs-api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: development
  #   command: yarn start:dev
  #   ports:
  #     - '6006:3000'
  #   volumes:
  #     - ./src:/user/src/app/src
  #     - ignore:/user/src/app/node_modules/
  #   depends_on:
  #     - mongo
  #     - redis
  #   networks:
  #     - shared-network
  #   env_file:
  #     - .env

volumes:
  # ignore:
  dbdata:
  redis:
    driver: local
  grafana_storage:

networks:
  shared-network:
    driver: bridge
  es-network:
    driver: bridge
